version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./backend:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - mysql
      - frontend

  backend:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    volumes:
      - ./backend:/var/www
    environment:
      - DATABASE_URL=mysql://user:password@mysql:3306/telegram_bot
    depends_on:
      - mysql

  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    container_name: frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - HOST=0.0.0.0
      - PORT=3000
      - NODE_OPTIONS=--max-old-space-size=2048
    volumes:
      - ./frontend:/frontend/node_modules
#      - ./frontend/.output:/frontend/.output

  mysql:
    image: mysql:latest
    environment:
      MYSQL_DATABASE: telegram_bot
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"

volumes:
  mysql_data:
